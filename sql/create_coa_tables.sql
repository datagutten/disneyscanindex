# MySQL creation script for Inducks data model, generated by Dizni version 2013-0130
# DO NOT EDIT THIS FILE

CREATE DATABASE IF NOT EXISTS coa;
USE coa;
SET storage_engine=MYISAM;

# Step 1

# SQL for re-creating and filling table inducks_storyversion
DROP TABLE IF EXISTS inducks_storyversion_temp;
CREATE TABLE inducks_storyversion_temp (
    storyversioncode varchar(19),
    storycode varchar(19),
    entirepages int(7),
    brokenpagenumerator int(7),
    brokenpagedenominator int(7),
    brokenpageunspecified enum('Y','N'),
    kind varchar(1),
    rowsperpage int(7),
    columnsperpage int(7),
    appisxapp enum('Y','N'),
    what varchar(1),
    appsummary text,
    plotsummary text,
    writsummary text,
    artsummary text,
    inksummary text,
    creatorrefsummary text,
    keywordsummary text,
    estimatedpanels int(7),
    KEY pk0 (storyversioncode),
    KEY fk1 (storycode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_storyversion.isv" INTO TABLE inducks_storyversion_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
ALTER TABLE inducks_storyversion_temp ADD FULLTEXT(appsummary,plotsummary,writsummary,artsummary,inksummary,creatorrefsummary,keywordsummary);
CREATE TABLE IF NOT EXISTS inducks_storyversion LIKE inducks_storyversion_temp;
# SQL for re-creating and filling table inducks_herocharacter
DROP TABLE IF EXISTS inducks_herocharacter_temp;
CREATE TABLE inducks_herocharacter_temp (
    storycode varchar(18),
    charactercode varchar(54),
    number int(7),
    KEY pk0 (storycode, charactercode),
    KEY fk0 (charactercode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_herocharacter.isv" INTO TABLE inducks_herocharacter_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_herocharacter LIKE inducks_herocharacter_temp;
# SQL for re-creating and filling table inducks_appearance
DROP TABLE IF EXISTS inducks_appearance_temp;
CREATE TABLE inducks_appearance_temp (
    storyversioncode varchar(18),
    charactercode varchar(62),
    number int(7),
    appearancecomment varchar(209),
    KEY pk0 (storyversioncode, charactercode),
    KEY fk0 (charactercode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_appearance.isv" INTO TABLE inducks_appearance_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_appearance LIKE inducks_appearance_temp;
# SQL for re-creating and filling table inducks_storyjob
DROP TABLE IF EXISTS inducks_storyjob_temp;
CREATE TABLE inducks_storyjob_temp (
    storyversioncode varchar(19),
    personcode varchar(79),
    plotwritartink varchar(1),
    storyjobcomment varchar(141),
    indirect enum('Y','N'),
    KEY pk0 (storyversioncode, personcode, plotwritartink),
    KEY fk0 (personcode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_storyjob.isv" INTO TABLE inducks_storyjob_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_storyjob LIKE inducks_storyjob_temp;
# SQL for re-creating and filling table inducks_story
DROP TABLE IF EXISTS inducks_story_temp;
CREATE TABLE inducks_story_temp (
    storycode varchar(19),
    originalstoryversioncode varchar(19),
    creationdate varchar(11),
    firstpublicationdate varchar(10),
    endpublicationdate varchar(10),
    title text,
    usedifferentcode varchar(19),
    storycomment varchar(675),
    error enum('Y','N'),
    repcountrysummary text,
    storyparts int(7),
    locked enum('Y','N'),
    inputfilecode int(7),
    issuecodeofstoryitem varchar(14),
    KEY pk0 (storycode),
    KEY fk0 (originalstoryversioncode),
    KEY fk1 (firstpublicationdate)
);
LOAD DATA LOCAL INFILE "./isv/inducks_story.isv" INTO TABLE inducks_story_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
ALTER TABLE inducks_story_temp ADD FULLTEXT(title,repcountrysummary);
CREATE TABLE IF NOT EXISTS inducks_story LIKE inducks_story_temp;
# SQL for re-creating and filling table inducks_substory
DROP TABLE IF EXISTS inducks_substory_temp;
CREATE TABLE inducks_substory_temp (
    storycode varchar(12),
    originalstoryversioncode varchar(12),
    superstorycode varchar(13),
    part varchar(3),
    firstpublicationdate varchar(10),
    title varchar(76),
    substorycomment varchar(349),
    error enum('Y','N'),
    locked enum('Y','N'),
    inputfilecode int(7),
    KEY pk0 (storycode),
    KEY fk0 (firstpublicationdate)
);
LOAD DATA LOCAL INFILE "./isv/inducks_substory.isv" INTO TABLE inducks_substory_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_substory LIKE inducks_substory_temp;
# SQL for re-creating and filling table induckspriv_story
DROP TABLE IF EXISTS induckspriv_story_temp;
CREATE TABLE induckspriv_story_temp (
    storycode varchar(17),
    storycomment varchar(1275),
    KEY pk0 (storycode)
);
#LOAD DATA LOCAL INFILE "./isv/induckspriv_story.isv" INTO TABLE induckspriv_story_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS induckspriv_story LIKE induckspriv_story_temp;
# SQL for re-creating and filling table inducks_storysubseries
DROP TABLE IF EXISTS inducks_storysubseries_temp;
CREATE TABLE inducks_storysubseries_temp (
    storycode varchar(16),
    subseriescode varchar(95),
    storysubseriescomment varchar(23),
    KEY pk0 (storycode, subseriescode),
    KEY fk0 (subseriescode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_storysubseries.isv" INTO TABLE inducks_storysubseries_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_storysubseries LIKE inducks_storysubseries_temp;
# SQL for re-creating and filling table inducks_storycodes
DROP TABLE IF EXISTS inducks_storycodes_temp;
CREATE TABLE inducks_storycodes_temp (
    storycode varchar(19),
    alternativecode varchar(72),
    unpackedcode varchar(82),
    codecomment varchar(34),
    KEY pk0 (storycode, alternativecode),
    KEY fk0 (alternativecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_storycodes.isv" INTO TABLE inducks_storycodes_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_storycodes LIKE inducks_storycodes_temp;
# SQL for re-creating and filling table inducks_storydescription
DROP TABLE IF EXISTS inducks_storydescription_temp;
CREATE TABLE inducks_storydescription_temp (
    storyversioncode varchar(19),
    languagecode varchar(7),
    desctext varchar(2814),
    KEY pk0 (storyversioncode, languagecode),
    KEY fk0 (languagecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_storydescription.isv" INTO TABLE inducks_storydescription_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_storydescription LIKE inducks_storydescription_temp;
# SQL for re-creating and filling table inducks_storyreference
DROP TABLE IF EXISTS inducks_storyreference_temp;
CREATE TABLE inducks_storyreference_temp (
    fromstorycode varchar(23),
    tostorycode varchar(17),
    referencereasonid int(7),
    KEY pk0 (fromstorycode, tostorycode),
    KEY fk0 (tostorycode),
    KEY fk1 (referencereasonid)
);
LOAD DATA LOCAL INFILE "./isv/inducks_storyreference.isv" INTO TABLE inducks_storyreference_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_storyreference LIKE inducks_storyreference_temp;
# SQL for re-creating and filling table inducks_movie
DROP TABLE IF EXISTS inducks_movie_temp;
CREATE TABLE inducks_movie_temp (
    moviecode varchar(14),
    title varchar(62),
    moviecomment varchar(570),
    appsummary text,
    moviejobsummary text,
    locked enum('Y','N'),
    inputfilecode int(7),
    aka varchar(81),
    creationdate varchar(10),
    moviedescription varchar(836),
    distributor varchar(50),
    genre varchar(3),
    orderer varchar(178),
    publicationdate varchar(10),
    source varchar(91),
    tim varchar(6),
    KEY pk0 (moviecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_movie.isv" INTO TABLE inducks_movie_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
ALTER TABLE inducks_movie_temp ADD FULLTEXT(appsummary,moviejobsummary);
CREATE TABLE IF NOT EXISTS inducks_movie LIKE inducks_movie_temp;
# SQL for re-creating and filling table inducks_moviejob
DROP TABLE IF EXISTS inducks_moviejob_temp;
CREATE TABLE inducks_moviejob_temp (
    moviecode varchar(14),
    personcode varchar(39),
    role varchar(15),
    moviejobcomment varchar(82),
    indirect enum('Y','N'),
    KEY pk0 (moviecode, personcode, role),
    KEY fk0 (personcode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_moviejob.isv" INTO TABLE inducks_moviejob_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_moviejob LIKE inducks_moviejob_temp;
# SQL for re-creating and filling table inducks_moviereference
DROP TABLE IF EXISTS inducks_moviereference_temp;
CREATE TABLE inducks_moviereference_temp (
    storycode varchar(17),
    moviecode varchar(14),
    referencereasonid int(7),
    frommovietostory enum('Y','N'),
    KEY pk0 (storycode, moviecode),
    KEY fk0 (moviecode),
    KEY fk1 (referencereasonid)
);
LOAD DATA LOCAL INFILE "./isv/inducks_moviereference.isv" INTO TABLE inducks_moviereference_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_moviereference LIKE inducks_moviereference_temp;
# SQL for re-creating and filling table inducks_moviecharacter
DROP TABLE IF EXISTS inducks_moviecharacter_temp;
CREATE TABLE inducks_moviecharacter_temp (
    moviecode varchar(13),
    charactercode varchar(35),
    istitlecharacter enum('Y','N'),
    KEY pk0 (moviecode, charactercode),
    KEY fk0 (charactercode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_moviecharacter.isv" INTO TABLE inducks_moviecharacter_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_moviecharacter LIKE inducks_moviecharacter_temp;
# SQL for re-creating and filling table inducks_entry
DROP TABLE IF EXISTS inducks_entry_temp;
CREATE TABLE inducks_entry_temp (
    entrycode varchar(22),
    issuecode varchar(17),
    storyversioncode varchar(19),
    languagecode varchar(7),
    includedinentrycode varchar(18),
    position varchar(10),
    printedcode varchar(88),
    guessedcode varchar(39),
    title varchar(235),
    reallytitle enum('Y','N'),
    printedhero varchar(96),
    changes varchar(596),
    cut varchar(100),
    minorchanges varchar(558),
    missingpanels varchar(2),
    mirrored enum('Y','N'),
    sideways enum('Y','N'),
    startdate varchar(10),
    enddate varchar(10),
    identificationuncertain enum('Y','N'),
    alsoreprint varchar(66),
    part varchar(5),
    entrycomment varchar(3476),
    error enum('Y','N'),
    KEY pk0 (entrycode),
    KEY fk0 (issuecode),
    KEY fk1 (storyversioncode),
    KEY fk2 (languagecode),
    KEY fk3 (includedinentrycode),
    KEY fk4 (position)
);
LOAD DATA LOCAL INFILE "./isv/inducks_entry.isv" INTO TABLE inducks_entry_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_entry LIKE inducks_entry_temp;
# SQL for re-creating and filling table induckspriv_entry
DROP TABLE IF EXISTS induckspriv_entry_temp;
CREATE TABLE induckspriv_entry_temp (
    entrycode varchar(22),
    entrycomment varchar(1209),
    KEY pk0 (entrycode)
);
#LOAD DATA LOCAL INFILE "./isv/induckspriv_entry.isv" INTO TABLE induckspriv_entry_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS induckspriv_entry LIKE induckspriv_entry_temp;
# SQL for re-creating and filling table inducks_logocharacter
DROP TABLE IF EXISTS inducks_logocharacter_temp;
CREATE TABLE inducks_logocharacter_temp (
    entrycode varchar(22),
    charactercode varchar(54),
    reallyintitle enum('Y','N'),
    number int(7),
    logocharactercomment varchar(28),
    KEY pk0 (entrycode, charactercode),
    KEY fk0 (charactercode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_logocharacter.isv" INTO TABLE inducks_logocharacter_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_logocharacter LIKE inducks_logocharacter_temp;
# SQL for re-creating and filling table inducks_entrycharactername
DROP TABLE IF EXISTS inducks_entrycharactername_temp;
CREATE TABLE inducks_entrycharactername_temp (
    entrycode varchar(22),
    charactercode varchar(55),
    charactername varchar(72),
    KEY pk0 (entrycode, charactercode),
    KEY fk0 (charactercode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_entrycharactername.isv" INTO TABLE inducks_entrycharactername_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_entrycharactername LIKE inducks_entrycharactername_temp;
# SQL for re-creating and filling table inducks_entryjob
DROP TABLE IF EXISTS inducks_entryjob_temp;
CREATE TABLE inducks_entryjob_temp (
    entrycode varchar(18),
    personcode varchar(50),
    transletcol varchar(1),
    entryjobcomment varchar(51),
    KEY pk0 (entrycode, personcode, transletcol),
    KEY fk0 (personcode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_entryjob.isv" INTO TABLE inducks_entryjob_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_entryjob LIKE inducks_entryjob_temp;
# SQL for re-creating and filling table inducks_language
DROP TABLE IF EXISTS inducks_language_temp;
CREATE TABLE inducks_language_temp (
    languagecode varchar(7),
    defaultlanguagecode varchar(5),
    languagename varchar(20),
    KEY pk0 (languagecode),
    KEY fk0 (defaultlanguagecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_language.isv" INTO TABLE inducks_language_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_language LIKE inducks_language_temp;
# SQL for re-creating and filling table inducks_languagename
DROP TABLE IF EXISTS inducks_languagename_temp;
CREATE TABLE inducks_languagename_temp (
    desclanguagecode varchar(5),
    languagecode varchar(7),
    languagename varchar(57),
    KEY pk0 (desclanguagecode, languagecode),
    KEY fk0 (languagecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_languagename.isv" INTO TABLE inducks_languagename_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_languagename LIKE inducks_languagename_temp;
# SQL for re-creating and filling table inducks_countryname
DROP TABLE IF EXISTS inducks_countryname_temp;
CREATE TABLE inducks_countryname_temp (
    countrycode varchar(2),
    languagecode varchar(5),
    countryname varchar(88),
    KEY pk0 (countrycode, languagecode),
    KEY fk0 (languagecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_countryname.isv" INTO TABLE inducks_countryname_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_countryname LIKE inducks_countryname_temp;
# SQL for re-creating and filling table inducks_country
DROP TABLE IF EXISTS inducks_country_temp;
CREATE TABLE inducks_country_temp (
    countrycode varchar(2),
    countryname varchar(20),
    defaultlanguage varchar(7),
    KEY pk0 (countrycode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_country.isv" INTO TABLE inducks_country_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_country LIKE inducks_country_temp;
# SQL for re-creating and filling table inducks_inputfile
DROP TABLE IF EXISTS inducks_inputfile_temp;
CREATE TABLE inducks_inputfile_temp (
    inputfilecode int(7),
    path varchar(11),
    filename varchar(22),
    layout varchar(10),
    locked enum('Y','N'),
    countrycode varchar(2),
    languagecode varchar(7),
    producercode varchar(15),
    KEY pk0 (inputfilecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_inputfile.isv" INTO TABLE inducks_inputfile_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_inputfile LIKE inducks_inputfile_temp;
# SQL for re-creating and filling table inducks_log
DROP TABLE IF EXISTS inducks_log_temp;
CREATE TABLE inducks_log_temp (
    number int(7),
    logkey varchar(45),
    storycode varchar(39),
    logid varchar(4),
    logtype varchar(1),
    par1 varchar(2070),
    par2 varchar(1846),
    par3 varchar(397),
    marked enum('Y','N'),
    inputfilecode int(7),
    KEY pk0 (number)
);
LOAD DATA LOCAL INFILE "./isv/inducks_log.isv" INTO TABLE inducks_log_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_log LIKE inducks_log_temp;
# SQL for re-creating and filling table inducks_logincharge
DROP TABLE IF EXISTS inducks_logincharge_temp;
CREATE TABLE inducks_logincharge_temp (
    lognumber int(7),
    personcode varchar(3),
    KEY pk0 (lognumber, personcode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_logincharge.isv" INTO TABLE inducks_logincharge_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_logincharge LIKE inducks_logincharge_temp;
# SQL for re-creating and filling table inducks_logdata
DROP TABLE IF EXISTS inducks_logdata_temp;
CREATE TABLE inducks_logdata_temp (
    logid varchar(4),
    category int(7),
    logtext varchar(108),
    KEY pk0 (logid)
);
LOAD DATA LOCAL INFILE "./isv/inducks_logdata.isv" INTO TABLE inducks_logdata_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_logdata LIKE inducks_logdata_temp;
# SQL for re-creating and filling table inducks_issue
DROP TABLE IF EXISTS inducks_issue_temp;
CREATE TABLE inducks_issue_temp (
    issuecode varchar(17),
    issuerangecode varchar(13),
    publicationcode varchar(12),
    issuenumber varchar(12),
    title varchar(142),
    size varchar(61),
    pages varchar(82),
    price varchar(91),
    printrun varchar(142),
    attached varchar(288),
    oldestdate varchar(10),
    fullyindexed enum('Y','N'),
    issuecomment varchar(729),
    error enum('Y','N'),
    filledoldestdate varchar(10),
    locked enum('Y','N'),
    inxforbidden enum('Y','N'),
    inputfilecode int(7),
    KEY pk0 (issuecode),
    KEY fk0 (issuerangecode),
    KEY fk1 (publicationcode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_issue.isv" INTO TABLE inducks_issue_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_issue LIKE inducks_issue_temp;
# SQL for re-creating and filling table inducks_issuejob
DROP TABLE IF EXISTS inducks_issuejob_temp;
CREATE TABLE inducks_issuejob_temp (
    issuecode varchar(17),
    personcode varchar(48),
    inxtransletcol varchar(1),
    issuejobcomment varchar(32),
    KEY pk0 (issuecode, personcode, inxtransletcol),
    KEY fk0 (personcode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_issuejob.isv" INTO TABLE inducks_issuejob_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_issuejob LIKE inducks_issuejob_temp;
# SQL for re-creating and filling table inducks_issuedate
DROP TABLE IF EXISTS inducks_issuedate_temp;
CREATE TABLE inducks_issuedate_temp (
    issuecode varchar(17),
    date varchar(10),
    kindofdate varchar(76),
    KEY pk0 (issuecode, date)
);
LOAD DATA LOCAL INFILE "./isv/inducks_issuedate.isv" INTO TABLE inducks_issuedate_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_issuedate LIKE inducks_issuedate_temp;
# SQL for re-creating and filling table inducks_issuecollecting
DROP TABLE IF EXISTS inducks_issuecollecting_temp;
CREATE TABLE inducks_issuecollecting_temp (
    collectingissuecode varchar(17),
    collectedissuecode varchar(15),
    KEY pk0 (collectingissuecode, collectedissuecode),
    KEY fk0 (collectedissuecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_issuecollecting.isv" INTO TABLE inducks_issuecollecting_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_issuecollecting LIKE inducks_issuecollecting_temp;
# SQL for re-creating and filling table inducks_equiv
DROP TABLE IF EXISTS inducks_equiv_temp;
CREATE TABLE inducks_equiv_temp (
    issuecode varchar(15),
    equivid int(7),
    equivcomment varchar(2),
    KEY pk0 (issuecode, equivid),
    KEY fk0 (equivid)
);
LOAD DATA LOCAL INFILE "./isv/inducks_equiv.isv" INTO TABLE inducks_equiv_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_equiv LIKE inducks_equiv_temp;
# SQL for re-creating and filling table inducks_issuerange
DROP TABLE IF EXISTS inducks_issuerange_temp;
CREATE TABLE inducks_issuerange_temp (
    issuerangecode varchar(13),
    publicationcode varchar(9),
    title varchar(229),
    circulation varchar(6),
    issuerangecomment varchar(468),
    numbersarefake enum('Y','N'),
    error enum('Y','N'),
    KEY pk0 (issuerangecode),
    KEY fk0 (publicationcode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_issuerange.isv" INTO TABLE inducks_issuerange_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_issuerange LIKE inducks_issuerange_temp;
# SQL for re-creating and filling table inducks_publication
DROP TABLE IF EXISTS inducks_publication_temp;
CREATE TABLE inducks_publication_temp (
    publicationcode varchar(12),
    countrycode varchar(2),
    languagecode varchar(7),
    title text,
    size varchar(61),
    publicationcomment varchar(1349),
    circulation varchar(118),
    numbersarefake enum('Y','N'),
    error enum('Y','N'),
    locked enum('Y','N'),
    inxforbidden enum('Y','N'),
    inputfilecode int(7),
    KEY pk0 (publicationcode),
    KEY fk0 (countrycode),
    KEY fk1 (languagecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_publication.isv" INTO TABLE inducks_publication_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
ALTER TABLE inducks_publication_temp ADD FULLTEXT(title);
CREATE TABLE IF NOT EXISTS inducks_publication LIKE inducks_publication_temp;
# SQL for re-creating and filling table inducks_publicationjob
DROP TABLE IF EXISTS inducks_publicationjob_temp;
CREATE TABLE inducks_publicationjob_temp (
    publicationcode varchar(12),
    personcode varchar(3),
    incharge varchar(1),
    publicationjobcomment varchar(1),
    KEY pk0 (publicationcode, personcode, incharge),
    KEY fk0 (personcode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_publicationjob.isv" INTO TABLE inducks_publicationjob_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_publicationjob LIKE inducks_publicationjob_temp;
# SQL for re-creating and filling table inducks_publicationcategory
DROP TABLE IF EXISTS inducks_publicationcategory_temp;
CREATE TABLE inducks_publicationcategory_temp (
    publicationcode varchar(12),
    category varchar(61),
    KEY pk0 (publicationcode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_publicationcategory.isv" INTO TABLE inducks_publicationcategory_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_publicationcategory LIKE inducks_publicationcategory_temp;
# SQL for re-creating and filling table inducks_publicationname
DROP TABLE IF EXISTS inducks_publicationname_temp;
CREATE TABLE inducks_publicationname_temp (
    publicationcode varchar(9),
    publicationname varchar(62),
    KEY pk0 (publicationcode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_publicationname.isv" INTO TABLE inducks_publicationname_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_publicationname LIKE inducks_publicationname_temp;
# SQL for re-creating and filling table inducks_publisher
DROP TABLE IF EXISTS inducks_publisher_temp;
CREATE TABLE inducks_publisher_temp (
    publisherid varchar(84),
    publishername text,
    KEY pk0 (publisherid)
);
LOAD DATA LOCAL INFILE "./isv/inducks_publisher.isv" INTO TABLE inducks_publisher_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
ALTER TABLE inducks_publisher_temp ADD FULLTEXT(publishername);
CREATE TABLE IF NOT EXISTS inducks_publisher LIKE inducks_publisher_temp;
# SQL for re-creating and filling table inducks_publishingjob
DROP TABLE IF EXISTS inducks_publishingjob_temp;
CREATE TABLE inducks_publishingjob_temp (
    publisherid varchar(84),
    issuecode varchar(17),
    publishingjobcomment varchar(36),
    KEY pk0 (publisherid, issuecode),
    KEY fk0 (issuecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_publishingjob.isv" INTO TABLE inducks_publishingjob_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_publishingjob LIKE inducks_publishingjob_temp;
# SQL for re-creating and filling table inducks_character
DROP TABLE IF EXISTS inducks_character_temp;
CREATE TABLE inducks_character_temp (
    charactercode varchar(69),
    charactername text,
    official enum('Y','N'),
    onetime enum('Y','N'),
    heroonly enum('Y','N'),
    charactercomment varchar(567),
    KEY pk0 (charactercode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_character.isv" INTO TABLE inducks_character_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
ALTER TABLE inducks_character_temp ADD FULLTEXT(charactername);
CREATE TABLE IF NOT EXISTS inducks_character LIKE inducks_character_temp;
# SQL for re-creating and filling table inducks_charactername
DROP TABLE IF EXISTS inducks_charactername_temp;
CREATE TABLE inducks_charactername_temp (
    charactercode varchar(38),
    languagecode varchar(7),
    charactername varchar(83),
    preferred enum('Y','N'),
    characternamecomment varchar(99),
    KEY pk0 (charactercode, languagecode, charactername),
    KEY fk0 (languagecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_charactername.isv" INTO TABLE inducks_charactername_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_charactername LIKE inducks_charactername_temp;
# SQL for re-creating and filling table inducks_characteralias
DROP TABLE IF EXISTS inducks_characteralias_temp;
CREATE TABLE inducks_characteralias_temp (
    charactercode varchar(30),
    charactername varchar(58),
    KEY pk0 (charactername),
    KEY fk0 (charactercode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_characteralias.isv" INTO TABLE inducks_characteralias_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_characteralias LIKE inducks_characteralias_temp;
# SQL for re-creating and filling table inducks_characterreference
DROP TABLE IF EXISTS inducks_characterreference_temp;
CREATE TABLE inducks_characterreference_temp (
    fromcharactercode varchar(19),
    tocharactercode varchar(19),
    KEY pk0 (fromcharactercode, tocharactercode),
    KEY fk0 (tocharactercode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_characterreference.isv" INTO TABLE inducks_characterreference_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_characterreference LIKE inducks_characterreference_temp;
# SQL for re-creating and filling table inducks_characterdetail
DROP TABLE IF EXISTS inducks_characterdetail_temp;
CREATE TABLE inducks_characterdetail_temp (
    charactername varchar(7),
    charactercode varchar(6),
    number int(7),
    KEY pk0 (charactercode),
    KEY fk0 (charactername)
);
LOAD DATA LOCAL INFILE "./isv/inducks_characterdetail.isv" INTO TABLE inducks_characterdetail_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_characterdetail LIKE inducks_characterdetail_temp;
# SQL for re-creating and filling table inducks_subseries
DROP TABLE IF EXISTS inducks_subseries_temp;
CREATE TABLE inducks_subseries_temp (
    subseriescode varchar(95),
    subseriesname varchar(95),
    official enum('Y','N'),
    important enum('Y','N'),
    subseriescomment varchar(97),
    subseriescategory varchar(1),
    KEY pk0 (subseriescode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_subseries.isv" INTO TABLE inducks_subseries_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_subseries LIKE inducks_subseries_temp;
# SQL for re-creating and filling table inducks_subseriesname
DROP TABLE IF EXISTS inducks_subseriesname_temp;
CREATE TABLE inducks_subseriesname_temp (
    subseriescode varchar(42),
    languagecode varchar(7),
    subseriesname varchar(121),
    KEY pk0 (subseriescode, languagecode),
    KEY fk0 (languagecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_subseriesname.isv" INTO TABLE inducks_subseriesname_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_subseriesname LIKE inducks_subseriesname_temp;
# SQL for re-creating and filling table inducks_referencereason
DROP TABLE IF EXISTS inducks_referencereason_temp;
CREATE TABLE inducks_referencereason_temp (
    referencereasonid int(7),
    referencereasontext varchar(87),
    KEY pk0 (referencereasonid)
);
LOAD DATA LOCAL INFILE "./isv/inducks_referencereason.isv" INTO TABLE inducks_referencereason_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_referencereason LIKE inducks_referencereason_temp;
# SQL for re-creating and filling table inducks_referencereasonname
DROP TABLE IF EXISTS inducks_referencereasonname_temp;
CREATE TABLE inducks_referencereasonname_temp (
    referencereasonid int(7),
    languagecode varchar(2),
    referencereasontranslation varchar(28),
    KEY pk0 (referencereasonid, languagecode),
    KEY fk0 (languagecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_referencereasonname.isv" INTO TABLE inducks_referencereasonname_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_referencereasonname LIKE inducks_referencereasonname_temp;
# SQL for re-creating and filling table inducks_universe
DROP TABLE IF EXISTS inducks_universe_temp;
CREATE TABLE inducks_universe_temp (
    universecode varchar(28),
    universecomment varchar(1),
    KEY pk0 (universecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_universe.isv" INTO TABLE inducks_universe_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_universe LIKE inducks_universe_temp;
# SQL for re-creating and filling table inducks_ucrelation
DROP TABLE IF EXISTS inducks_ucrelation_temp;
CREATE TABLE inducks_ucrelation_temp (
    universecode varchar(28),
    charactercode varchar(38),
    KEY pk0 (universecode, charactercode),
    KEY fk0 (charactercode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_ucrelation.isv" INTO TABLE inducks_ucrelation_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_ucrelation LIKE inducks_ucrelation_temp;
# SQL for re-creating and filling table inducks_universename
DROP TABLE IF EXISTS inducks_universename_temp;
CREATE TABLE inducks_universename_temp (
    universecode varchar(28),
    languagecode varchar(5),
    universename varchar(76),
    KEY pk0 (universecode, languagecode),
    KEY fk0 (languagecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_universename.isv" INTO TABLE inducks_universename_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_universename LIKE inducks_universename_temp;
# SQL for re-creating and filling table inducks_person
DROP TABLE IF EXISTS inducks_person_temp;
CREATE TABLE inducks_person_temp (
    personcode varchar(79),
    nationalitycountrycode varchar(2),
    fullname text,
    official enum('Y','N'),
    personcomment varchar(221),
    unknownstudiomember enum('Y','N'),
    isfake enum('Y','N'),
    birthname text,
    borndate varchar(10),
    bornplace varchar(30),
    deceaseddate varchar(10),
    deceasedplace varchar(31),
    education varchar(144),
    moviestext varchar(879),
    comicstext varchar(1327),
    othertext varchar(307),
    photofilename varchar(32),
    photocomment varchar(68),
    photosource varchar(67),
    personrefs varchar(180),
    KEY pk0 (personcode),
    KEY fk0 (nationalitycountrycode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_person.isv" INTO TABLE inducks_person_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
ALTER TABLE inducks_person_temp ADD FULLTEXT(fullname,birthname);
CREATE TABLE IF NOT EXISTS inducks_person LIKE inducks_person_temp;
# SQL for re-creating and filling table inducks_personalias
DROP TABLE IF EXISTS inducks_personalias_temp;
CREATE TABLE inducks_personalias_temp (
    personcode varchar(31),
    surname varchar(48),
    givenname varchar(31),
    official enum('Y','N'),
    KEY fk0 (personcode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_personalias.isv" INTO TABLE inducks_personalias_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_personalias LIKE inducks_personalias_temp;
# SQL for re-creating and filling table inducks_studio
DROP TABLE IF EXISTS inducks_studio_temp;
CREATE TABLE inducks_studio_temp (
    studiocode varchar(23),
    countrycode varchar(2),
    studioname varchar(24),
    city varchar(12),
    description varchar(415),
    othertext varchar(94),
    photofilename varchar(18),
    photocomment varchar(40),
    photosource varchar(42),
    studiorefs varchar(204),
    KEY pk0 (studiocode),
    KEY fk0 (countrycode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_studio.isv" INTO TABLE inducks_studio_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_studio LIKE inducks_studio_temp;
# SQL for re-creating and filling table inducks_studiowork
DROP TABLE IF EXISTS inducks_studiowork_temp;
CREATE TABLE inducks_studiowork_temp (
    studiocode varchar(23),
    personcode varchar(24),
    KEY pk0 (studiocode, personcode),
    KEY fk0 (personcode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_studiowork.isv" INTO TABLE inducks_studiowork_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_studiowork LIKE inducks_studiowork_temp;
# SQL for re-creating and filling table inducks_site
DROP TABLE IF EXISTS inducks_site_temp;
CREATE TABLE inducks_site_temp (
    sitecode varchar(16),
    urlbase varchar(51),
    images enum('Y','N'),
    sitename varchar(45),
    sitelogo varchar(85),
    properties varchar(1),
    KEY pk0 (sitecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_site.isv" INTO TABLE inducks_site_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_site LIKE inducks_site_temp;
# SQL for re-creating and filling table inducks_entryurl
DROP TABLE IF EXISTS inducks_entryurl_temp;
CREATE TABLE inducks_entryurl_temp (
    entrycode varchar(21),
    sitecode varchar(11),
    pagenumber int(7),
    url varchar(87),
    KEY fk0 (entrycode),
    KEY fk1 (sitecode),
    KEY fk2 (url)
);
LOAD DATA LOCAL INFILE "./isv/inducks_entryurl.isv" INTO TABLE inducks_entryurl_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_entryurl LIKE inducks_entryurl_temp;
# SQL for re-creating and filling table induckspriv_entryurl
DROP TABLE IF EXISTS induckspriv_entryurl_temp;
CREATE TABLE induckspriv_entryurl_temp (
    entrycode varchar(18),
    sitecode varchar(11),
    pagenumber int(7),
    url varchar(46),
    KEY fk0 (entrycode),
    KEY fk1 (sitecode),
    KEY fk2 (url)
);
#LOAD DATA LOCAL INFILE "./isv/induckspriv_entryurl.isv" INTO TABLE induckspriv_entryurl_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS induckspriv_entryurl LIKE induckspriv_entryurl_temp;
# SQL for re-creating and filling table inducks_publicationurl
DROP TABLE IF EXISTS inducks_publicationurl_temp;
CREATE TABLE inducks_publicationurl_temp (
    publicationcode varchar(10),
    sitecode varchar(16),
    url varchar(87),
    KEY pk0 (publicationcode, sitecode),
    KEY fk0 (sitecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_publicationurl.isv" INTO TABLE inducks_publicationurl_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_publicationurl LIKE inducks_publicationurl_temp;
# SQL for re-creating and filling table inducks_issueurl
DROP TABLE IF EXISTS inducks_issueurl_temp;
CREATE TABLE inducks_issueurl_temp (
    issuecode varchar(14),
    sitecode varchar(12),
    url varchar(12),
    KEY pk0 (issuecode, sitecode),
    KEY fk0 (sitecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_issueurl.isv" INTO TABLE inducks_issueurl_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_issueurl LIKE inducks_issueurl_temp;
# SQL for re-creating and filling table inducks_personurl
DROP TABLE IF EXISTS inducks_personurl_temp;
CREATE TABLE inducks_personurl_temp (
    personcode varchar(24),
    sitecode varchar(15),
    url varchar(31),
    KEY pk0 (personcode, sitecode),
    KEY fk0 (sitecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_personurl.isv" INTO TABLE inducks_personurl_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_personurl LIKE inducks_personurl_temp;
# SQL for re-creating and filling table inducks_characterurl
DROP TABLE IF EXISTS inducks_characterurl_temp;
CREATE TABLE inducks_characterurl_temp (
    charactercode varchar(18),
    sitecode varchar(11),
    url varchar(13),
    KEY pk0 (charactercode, sitecode),
    KEY fk0 (sitecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_characterurl.isv" INTO TABLE inducks_characterurl_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_characterurl LIKE inducks_characterurl_temp;
# SQL for re-creating and filling table inducks_storyurl
DROP TABLE IF EXISTS inducks_storyurl_temp;
CREATE TABLE inducks_storyurl_temp (
    storycode varchar(13),
    sitecode varchar(15),
    url varchar(40),
    KEY pk0 (storycode, sitecode),
    KEY fk0 (sitecode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_storyurl.isv" INTO TABLE inducks_storyurl_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_storyurl LIKE inducks_storyurl_temp;
# SQL for re-creating and filling table inducks_storyheader
DROP TABLE IF EXISTS inducks_storyheader_temp;
CREATE TABLE inducks_storyheader_temp (
    storyheadercode varchar(9),
    level varchar(1),
    title varchar(217),
    storyheadercomment varchar(544),
    KEY pk0 (storyheadercode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_storyheader.isv" INTO TABLE inducks_storyheader_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_storyheader LIKE inducks_storyheader_temp;
# SQL for re-creating and filling table inducks_statpersonstory
DROP TABLE IF EXISTS inducks_statpersonstory_temp;
CREATE TABLE inducks_statpersonstory_temp (
    personcode varchar(79),
    productionletter varchar(1),
    total int(7),
    yearrange varchar(46),
    KEY pk0 (personcode, productionletter)
);
LOAD DATA LOCAL INFILE "./isv/inducks_statpersonstory.isv" INTO TABLE inducks_statpersonstory_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_statpersonstory LIKE inducks_statpersonstory_temp;
# SQL for re-creating and filling table inducks_statpersoncountry
DROP TABLE IF EXISTS inducks_statpersoncountry_temp;
CREATE TABLE inducks_statpersoncountry_temp (
    personcode varchar(79),
    countrycode varchar(2),
    total int(7),
    KEY pk0 (personcode, countrycode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_statpersoncountry.isv" INTO TABLE inducks_statpersoncountry_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_statpersoncountry LIKE inducks_statpersoncountry_temp;
# SQL for re-creating and filling table inducks_statpersonperson
DROP TABLE IF EXISTS inducks_statpersonperson_temp;
CREATE TABLE inducks_statpersonperson_temp (
    personcode varchar(79),
    copersoncode varchar(79),
    total int(7),
    yearrange varchar(35),
    KEY pk0 (personcode, total)
);
LOAD DATA LOCAL INFILE "./isv/inducks_statpersonperson.isv" INTO TABLE inducks_statpersonperson_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_statpersonperson LIKE inducks_statpersonperson_temp;
# SQL for re-creating and filling table inducks_statpersoncharacter
DROP TABLE IF EXISTS inducks_statpersoncharacter_temp;
CREATE TABLE inducks_statpersoncharacter_temp (
    personcode varchar(79),
    charactercode varchar(58),
    total int(7),
    yearrange varchar(56),
    KEY pk0 (personcode, total)
);
LOAD DATA LOCAL INFILE "./isv/inducks_statpersoncharacter.isv" INTO TABLE inducks_statpersoncharacter_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_statpersoncharacter LIKE inducks_statpersoncharacter_temp;
# SQL for re-creating and filling table inducks_statcharacterstory
DROP TABLE IF EXISTS inducks_statcharacterstory_temp;
CREATE TABLE inducks_statcharacterstory_temp (
    charactercode varchar(58),
    productionletter varchar(1),
    total int(7),
    yearrange varchar(71),
    KEY pk0 (charactercode, productionletter)
);
LOAD DATA LOCAL INFILE "./isv/inducks_statcharacterstory.isv" INTO TABLE inducks_statcharacterstory_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_statcharacterstory LIKE inducks_statcharacterstory_temp;
# SQL for re-creating and filling table inducks_statcharactercountry
DROP TABLE IF EXISTS inducks_statcharactercountry_temp;
CREATE TABLE inducks_statcharactercountry_temp (
    charactercode varchar(58),
    countrycode varchar(2),
    total int(7),
    KEY pk0 (charactercode, countrycode)
);
LOAD DATA LOCAL INFILE "./isv/inducks_statcharactercountry.isv" INTO TABLE inducks_statcharactercountry_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_statcharactercountry LIKE inducks_statcharactercountry_temp;
# SQL for re-creating and filling table inducks_statcharactercharacter
DROP TABLE IF EXISTS inducks_statcharactercharacter_temp;
CREATE TABLE inducks_statcharactercharacter_temp (
    charactercode varchar(58),
    cocharactercode varchar(58),
    total int(7),
    yearrange varchar(101),
    KEY pk0 (charactercode, total)
);
LOAD DATA LOCAL INFILE "./isv/inducks_statcharactercharacter.isv" INTO TABLE inducks_statcharactercharacter_temp FIELDS TERMINATED BY '^' IGNORE 1 LINES;
CREATE TABLE IF NOT EXISTS inducks_statcharactercharacter LIKE inducks_statcharactercharacter_temp;

# Step 2

RENAME TABLE inducks_storyversion TO inducks_storyversion_old, inducks_storyversion_temp TO inducks_storyversion;
RENAME TABLE inducks_herocharacter TO inducks_herocharacter_old, inducks_herocharacter_temp TO inducks_herocharacter;
RENAME TABLE inducks_appearance TO inducks_appearance_old, inducks_appearance_temp TO inducks_appearance;
RENAME TABLE inducks_storyjob TO inducks_storyjob_old, inducks_storyjob_temp TO inducks_storyjob;
RENAME TABLE inducks_story TO inducks_story_old, inducks_story_temp TO inducks_story;
RENAME TABLE inducks_substory TO inducks_substory_old, inducks_substory_temp TO inducks_substory;
RENAME TABLE induckspriv_story TO induckspriv_story_old, induckspriv_story_temp TO induckspriv_story;
RENAME TABLE inducks_storysubseries TO inducks_storysubseries_old, inducks_storysubseries_temp TO inducks_storysubseries;
RENAME TABLE inducks_storycodes TO inducks_storycodes_old, inducks_storycodes_temp TO inducks_storycodes;
RENAME TABLE inducks_storydescription TO inducks_storydescription_old, inducks_storydescription_temp TO inducks_storydescription;
RENAME TABLE inducks_storyreference TO inducks_storyreference_old, inducks_storyreference_temp TO inducks_storyreference;
RENAME TABLE inducks_movie TO inducks_movie_old, inducks_movie_temp TO inducks_movie;
RENAME TABLE inducks_moviejob TO inducks_moviejob_old, inducks_moviejob_temp TO inducks_moviejob;
RENAME TABLE inducks_moviereference TO inducks_moviereference_old, inducks_moviereference_temp TO inducks_moviereference;
RENAME TABLE inducks_moviecharacter TO inducks_moviecharacter_old, inducks_moviecharacter_temp TO inducks_moviecharacter;
RENAME TABLE inducks_entry TO inducks_entry_old, inducks_entry_temp TO inducks_entry;
RENAME TABLE induckspriv_entry TO induckspriv_entry_old, induckspriv_entry_temp TO induckspriv_entry;
RENAME TABLE inducks_logocharacter TO inducks_logocharacter_old, inducks_logocharacter_temp TO inducks_logocharacter;
RENAME TABLE inducks_entrycharactername TO inducks_entrycharactername_old, inducks_entrycharactername_temp TO inducks_entrycharactername;
RENAME TABLE inducks_entryjob TO inducks_entryjob_old, inducks_entryjob_temp TO inducks_entryjob;
RENAME TABLE inducks_language TO inducks_language_old, inducks_language_temp TO inducks_language;
RENAME TABLE inducks_languagename TO inducks_languagename_old, inducks_languagename_temp TO inducks_languagename;
RENAME TABLE inducks_countryname TO inducks_countryname_old, inducks_countryname_temp TO inducks_countryname;
RENAME TABLE inducks_country TO inducks_country_old, inducks_country_temp TO inducks_country;
RENAME TABLE inducks_inputfile TO inducks_inputfile_old, inducks_inputfile_temp TO inducks_inputfile;
RENAME TABLE inducks_log TO inducks_log_old, inducks_log_temp TO inducks_log;
RENAME TABLE inducks_logincharge TO inducks_logincharge_old, inducks_logincharge_temp TO inducks_logincharge;
RENAME TABLE inducks_logdata TO inducks_logdata_old, inducks_logdata_temp TO inducks_logdata;
RENAME TABLE inducks_issue TO inducks_issue_old, inducks_issue_temp TO inducks_issue;
RENAME TABLE inducks_issuejob TO inducks_issuejob_old, inducks_issuejob_temp TO inducks_issuejob;
RENAME TABLE inducks_issuedate TO inducks_issuedate_old, inducks_issuedate_temp TO inducks_issuedate;
RENAME TABLE inducks_issuecollecting TO inducks_issuecollecting_old, inducks_issuecollecting_temp TO inducks_issuecollecting;
RENAME TABLE inducks_equiv TO inducks_equiv_old, inducks_equiv_temp TO inducks_equiv;
RENAME TABLE inducks_issuerange TO inducks_issuerange_old, inducks_issuerange_temp TO inducks_issuerange;
RENAME TABLE inducks_publication TO inducks_publication_old, inducks_publication_temp TO inducks_publication;
RENAME TABLE inducks_publicationjob TO inducks_publicationjob_old, inducks_publicationjob_temp TO inducks_publicationjob;
RENAME TABLE inducks_publicationcategory TO inducks_publicationcategory_old, inducks_publicationcategory_temp TO inducks_publicationcategory;
RENAME TABLE inducks_publicationname TO inducks_publicationname_old, inducks_publicationname_temp TO inducks_publicationname;
RENAME TABLE inducks_publisher TO inducks_publisher_old, inducks_publisher_temp TO inducks_publisher;
RENAME TABLE inducks_publishingjob TO inducks_publishingjob_old, inducks_publishingjob_temp TO inducks_publishingjob;
RENAME TABLE inducks_character TO inducks_character_old, inducks_character_temp TO inducks_character;
RENAME TABLE inducks_charactername TO inducks_charactername_old, inducks_charactername_temp TO inducks_charactername;
RENAME TABLE inducks_characteralias TO inducks_characteralias_old, inducks_characteralias_temp TO inducks_characteralias;
RENAME TABLE inducks_characterreference TO inducks_characterreference_old, inducks_characterreference_temp TO inducks_characterreference;
RENAME TABLE inducks_characterdetail TO inducks_characterdetail_old, inducks_characterdetail_temp TO inducks_characterdetail;
RENAME TABLE inducks_subseries TO inducks_subseries_old, inducks_subseries_temp TO inducks_subseries;
RENAME TABLE inducks_subseriesname TO inducks_subseriesname_old, inducks_subseriesname_temp TO inducks_subseriesname;
RENAME TABLE inducks_referencereason TO inducks_referencereason_old, inducks_referencereason_temp TO inducks_referencereason;
RENAME TABLE inducks_referencereasonname TO inducks_referencereasonname_old, inducks_referencereasonname_temp TO inducks_referencereasonname;
RENAME TABLE inducks_universe TO inducks_universe_old, inducks_universe_temp TO inducks_universe;
RENAME TABLE inducks_ucrelation TO inducks_ucrelation_old, inducks_ucrelation_temp TO inducks_ucrelation;
RENAME TABLE inducks_universename TO inducks_universename_old, inducks_universename_temp TO inducks_universename;
RENAME TABLE inducks_person TO inducks_person_old, inducks_person_temp TO inducks_person;
RENAME TABLE inducks_personalias TO inducks_personalias_old, inducks_personalias_temp TO inducks_personalias;
RENAME TABLE inducks_studio TO inducks_studio_old, inducks_studio_temp TO inducks_studio;
RENAME TABLE inducks_studiowork TO inducks_studiowork_old, inducks_studiowork_temp TO inducks_studiowork;
RENAME TABLE inducks_site TO inducks_site_old, inducks_site_temp TO inducks_site;
RENAME TABLE inducks_entryurl TO inducks_entryurl_old, inducks_entryurl_temp TO inducks_entryurl;
RENAME TABLE induckspriv_entryurl TO induckspriv_entryurl_old, induckspriv_entryurl_temp TO induckspriv_entryurl;
RENAME TABLE inducks_publicationurl TO inducks_publicationurl_old, inducks_publicationurl_temp TO inducks_publicationurl;
RENAME TABLE inducks_issueurl TO inducks_issueurl_old, inducks_issueurl_temp TO inducks_issueurl;
RENAME TABLE inducks_personurl TO inducks_personurl_old, inducks_personurl_temp TO inducks_personurl;
RENAME TABLE inducks_characterurl TO inducks_characterurl_old, inducks_characterurl_temp TO inducks_characterurl;
RENAME TABLE inducks_storyurl TO inducks_storyurl_old, inducks_storyurl_temp TO inducks_storyurl;
RENAME TABLE inducks_storyheader TO inducks_storyheader_old, inducks_storyheader_temp TO inducks_storyheader;
RENAME TABLE inducks_statpersonstory TO inducks_statpersonstory_old, inducks_statpersonstory_temp TO inducks_statpersonstory;
RENAME TABLE inducks_statpersoncountry TO inducks_statpersoncountry_old, inducks_statpersoncountry_temp TO inducks_statpersoncountry;
RENAME TABLE inducks_statpersonperson TO inducks_statpersonperson_old, inducks_statpersonperson_temp TO inducks_statpersonperson;
RENAME TABLE inducks_statpersoncharacter TO inducks_statpersoncharacter_old, inducks_statpersoncharacter_temp TO inducks_statpersoncharacter;
RENAME TABLE inducks_statcharacterstory TO inducks_statcharacterstory_old, inducks_statcharacterstory_temp TO inducks_statcharacterstory;
RENAME TABLE inducks_statcharactercountry TO inducks_statcharactercountry_old, inducks_statcharactercountry_temp TO inducks_statcharactercountry;
RENAME TABLE inducks_statcharactercharacter TO inducks_statcharactercharacter_old, inducks_statcharactercharacter_temp TO inducks_statcharactercharacter;

# Step 3

DROP TABLE IF EXISTS inducks_storyversion_old;
DROP TABLE IF EXISTS inducks_herocharacter_old;
DROP TABLE IF EXISTS inducks_appearance_old;
DROP TABLE IF EXISTS inducks_storyjob_old;
DROP TABLE IF EXISTS inducks_story_old;
DROP TABLE IF EXISTS inducks_substory_old;
DROP TABLE IF EXISTS induckspriv_story_old;
DROP TABLE IF EXISTS inducks_storysubseries_old;
DROP TABLE IF EXISTS inducks_storycodes_old;
DROP TABLE IF EXISTS inducks_storydescription_old;
DROP TABLE IF EXISTS inducks_storyreference_old;
DROP TABLE IF EXISTS inducks_movie_old;
DROP TABLE IF EXISTS inducks_moviejob_old;
DROP TABLE IF EXISTS inducks_moviereference_old;
DROP TABLE IF EXISTS inducks_moviecharacter_old;
DROP TABLE IF EXISTS inducks_entry_old;
DROP TABLE IF EXISTS induckspriv_entry_old;
DROP TABLE IF EXISTS inducks_logocharacter_old;
DROP TABLE IF EXISTS inducks_entrycharactername_old;
DROP TABLE IF EXISTS inducks_entryjob_old;
DROP TABLE IF EXISTS inducks_language_old;
DROP TABLE IF EXISTS inducks_languagename_old;
DROP TABLE IF EXISTS inducks_countryname_old;
DROP TABLE IF EXISTS inducks_country_old;
DROP TABLE IF EXISTS inducks_inputfile_old;
DROP TABLE IF EXISTS inducks_log_old;
DROP TABLE IF EXISTS inducks_logincharge_old;
DROP TABLE IF EXISTS inducks_logdata_old;
DROP TABLE IF EXISTS inducks_issue_old;
DROP TABLE IF EXISTS inducks_issuejob_old;
DROP TABLE IF EXISTS inducks_issuedate_old;
DROP TABLE IF EXISTS inducks_issuecollecting_old;
DROP TABLE IF EXISTS inducks_equiv_old;
DROP TABLE IF EXISTS inducks_issuerange_old;
DROP TABLE IF EXISTS inducks_publication_old;
DROP TABLE IF EXISTS inducks_publicationjob_old;
DROP TABLE IF EXISTS inducks_publicationcategory_old;
DROP TABLE IF EXISTS inducks_publicationname_old;
DROP TABLE IF EXISTS inducks_publisher_old;
DROP TABLE IF EXISTS inducks_publishingjob_old;
DROP TABLE IF EXISTS inducks_character_old;
DROP TABLE IF EXISTS inducks_charactername_old;
DROP TABLE IF EXISTS inducks_characteralias_old;
DROP TABLE IF EXISTS inducks_characterreference_old;
DROP TABLE IF EXISTS inducks_characterdetail_old;
DROP TABLE IF EXISTS inducks_subseries_old;
DROP TABLE IF EXISTS inducks_subseriesname_old;
DROP TABLE IF EXISTS inducks_referencereason_old;
DROP TABLE IF EXISTS inducks_referencereasonname_old;
DROP TABLE IF EXISTS inducks_universe_old;
DROP TABLE IF EXISTS inducks_ucrelation_old;
DROP TABLE IF EXISTS inducks_universename_old;
DROP TABLE IF EXISTS inducks_person_old;
DROP TABLE IF EXISTS inducks_personalias_old;
DROP TABLE IF EXISTS inducks_studio_old;
DROP TABLE IF EXISTS inducks_studiowork_old;
DROP TABLE IF EXISTS inducks_site_old;
DROP TABLE IF EXISTS inducks_entryurl_old;
DROP TABLE IF EXISTS induckspriv_entryurl_old;
DROP TABLE IF EXISTS inducks_publicationurl_old;
DROP TABLE IF EXISTS inducks_issueurl_old;
DROP TABLE IF EXISTS inducks_personurl_old;
DROP TABLE IF EXISTS inducks_characterurl_old;
DROP TABLE IF EXISTS inducks_storyurl_old;
DROP TABLE IF EXISTS inducks_storyheader_old;
DROP TABLE IF EXISTS inducks_statpersonstory_old;
DROP TABLE IF EXISTS inducks_statpersoncountry_old;
DROP TABLE IF EXISTS inducks_statpersonperson_old;
DROP TABLE IF EXISTS inducks_statpersoncharacter_old;
DROP TABLE IF EXISTS inducks_statcharacterstory_old;
DROP TABLE IF EXISTS inducks_statcharactercountry_old;
DROP TABLE IF EXISTS inducks_statcharactercharacter_old;

# End of file
